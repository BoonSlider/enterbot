@page "/turg"
@page "/market"
@using GameEngine
@using Player
@using UI.Services
<PageTitle>Turg</PageTitle>
@inject Engine Engine
@inject ChangeNotifier Changes
@inject AlertService Alerts
@inject AlertTextProvider L

@code {
    private IPlayer P => Engine.HumanPlayer;
    private IPlayerData D => P.MyData;
    private long? _foodAmount;

    readonly Dictionary<MoonshineItem, long?> _moonshineAmounts = new()
    {
        { MoonshineItem.Teravili, null },
        { MoonshineItem.Suhkur, null },
        { MoonshineItem.Pärm, null },
        { MoonshineItem.Puskar, null },
    };

    readonly Dictionary<Weapon, long?> _weaponAmounts = Enum.GetValues<Weapon>().ToDictionary(w => w, _ => (long?)null);


    protected override void OnInitialized()
    {
        Changes.OnChange += StateHasChanged;
        AutofillMoonshineAmount();
    }

    async Task BuyFoodItems()
    {
        Dictionary<MoonshineItem, long> willBuy = new();
        foreach (var item in Enum.GetValues<MoonshineItem>())
        {
            if (item != MoonshineItem.Puskar && _moonshineAmounts[item] is { } v)
            {
                willBuy[item] = v;
                _moonshineAmounts[item] = null;
            }
        }

        Alerts.ShowAlert(P.BuyFood(_foodAmount ?? 0, willBuy));
        _foodAmount = null;
        await Changes.Notify();
    }

    private void AutofillWeapon(Weapon weapon)
    {
        _weaponAmounts[weapon] = Calc.CanBuyWeapon(D, weapon, 0);
        StateHasChanged();
    }

    private async Task BuyWeapons()
    {
        Dictionary<Weapon, long> willBuy = new Dictionary<Weapon, long>();
        foreach (var (key, value) in _weaponAmounts)
        {
            if (value is > 0)
                willBuy[key] = value.Value;
        }

        Alerts.ShowAlert(P.BuyWeapons(willBuy));
        foreach (var key in _weaponAmounts.Keys)
            _weaponAmounts[key] = null;
        await Changes.Notify();
    }

    private void AutofillMoonshineAmount()
    {
        _moonshineAmounts[MoonshineItem.Puskar] = D.MoonshineItemCounts[MoonshineItem.Puskar];
        StateHasChanged();
    }

    private async Task SellItems()
    {
        var amount = _moonshineAmounts[MoonshineItem.Puskar];
        if (amount is null) return;
        Alerts.ShowAlert(P.SellItems(amount.Value));
        AutofillMoonshineAmount();
        await Changes.Notify();
    }

    private void AutofillFood()
    {
        _foodAmount = D.Money / Consts.FoodPrice;
        StateHasChanged();
    }

    private void AutofillMoonshineIngredients()
    {
        var canMake = Calc.MaxMoonshineCanMake(D);
        foreach (var (key, value) in Consts.MoonshineRequirements)
        {
            _moonshineAmounts[key] = Math.Max(canMake * value - D.MoonshineItemCounts[key], 0L);
        }

        StateHasChanged();
    }

}



<div class="contentWindow maincontent">
    <h1>Turg</h1>
    <div class="content">
        <table>
            <tbody>
            <tr>
                <td>
                    Ühe relva ostmine võtab 2 käiku. <br><br>
                </td>
            </tr>
            </tbody>
        </table>
    </div>
    <h2>Osta kaupu</h2>
    <form @onsubmit="BuyFoodItems">
        <div class="content">
            <table class="a">
                <tbody>
                <tr>
                    <th>Ühik</th>
                    <th>Sul on</th>
                    <th>Ühiku hind</th>
                    <th>Palju osta</th>
                </tr>
                <tr>
                    <td>Toit</td>
                    <td class="toit">@Utils.SepThousands(D.Food)</td>
                    <td>@Consts.FoodPrice EEK</td>
                    <td>
                        <input name="toitosta" type="number" @bind="_foodAmount">
                        <div class="autofill" @onclick="AutofillFood"></div>
                    </td>
                </tr>
                @foreach (var item in Enum.GetValues<MoonshineItem>().Where(x => x != MoonshineItem.Puskar))
                {
                    <tr>
                        <td>@item.ToString()</td>
                        <td>@Utils.SepThousands(D.MoonshineItemCounts[item])</td>
                        <td>@Consts.MoonshinePrices[item] EEK</td>
                        <td>
                            <input type="number" @bind="_moonshineAmounts[item]">
                            <div class="autofill" @onclick="AutofillMoonshineIngredients"></div>
                        </td>
                    </tr>
                }
                </tbody>
            </table>
            <p><input type="submit" name="submit" value="Ok"></p>
        </div>
    </form>

    <form @onsubmit="BuyWeapons">
        <h2>Relvad</h2>
        <div class="content">
            <table class="a">
                <thead>
                <tr>
                    <th>Ühik</th>
                    <th>Kaitse</th>
                    <th>Rünne</th>
                    <th>Sul on</th>
                    <th>Ostu hind</th>
                    <th>Palju osta</th>
                </tr>
                </thead>
                <tbody>
                @foreach (var weapon in Enum.GetValues<Weapon>())
                {
                    <tr>
                        <td>@L.TextProvider.GetEnumTranslation(weapon)</td>
                        <td>@Consts.WeaponDef[weapon]</td>
                        <td>@Consts.WeaponAtk[weapon]</td>
                        <td class="numeric-td">@Utils.SepThousands(D.Weapons[weapon])</td>
                        <td class="numeric-td">@Consts.WeaponPrice[weapon] EEK</td>
                        <td>
                            <input type="number" @bind="_weaponAmounts[weapon]">
                            <div class="autofill" @onclick="() => AutofillWeapon(weapon)"></div>
                        </td>
                    </tr>
                }
                </tbody>
            </table>
            <p>
                <button>Ok</button>
            </p>
        </div>
    </form>

    <form @onsubmit="SellItems">
        <h2>Müü kaupu</h2>
        <div class="content last">
            <table class="a">
                <tbody>
                <tr>
                    <th>Ühik</th>
                    <th>Müügi hind</th>
                    <th>Sul on</th>
                    <th>Palju müüa</th>
                </tr>
                <tr>
                    <td>Puskar</td>
                    <td>@Consts.MoonshinePrices[MoonshineItem.Puskar] EEK</td>
                    <td class="puskar">@Utils.SepThousands(D.MoonshineItemCounts[MoonshineItem.Puskar])</td>
                    <td>
                        <input name="puskarmuu" type="number" @bind="_moonshineAmounts[MoonshineItem.Puskar]">
                        <div class="autofill" @onclick="AutofillMoonshineAmount"></div>
                    </td>
                </tr>
                </tbody>
            </table>
            <p><input type="submit" name="submit" value="Ok"></p>
        </div>
    </form>
</div>